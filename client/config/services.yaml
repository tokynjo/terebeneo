# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'fr'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    app.user_manager:
        class: App\Manager\UserManager
        arguments: ['@doctrine.orm.entity_manager', 'App\Entity\User']
        public: true
    app.notification_manager:
        class: App\Manager\NotificationManager
        arguments: ['@doctrine.orm.entity_manager', 'App\Entity\Notification']
        public: true
    app.notification_content_manager:
        class: App\Manager\NotificationContentManager
        arguments: ['@doctrine.orm.entity_manager', 'App\Entity\NotificationContent']
        public: true

    app.mailer:
        class: App\Services\Mailer
        arguments: ['@service_container','@mailer']
        public: true

    app.event.user:
        class: App\EventListener\UserListener
        arguments: ['@doctrine.orm.entity_manager','@security.token_storage','@translator','@app.notification_service']
        tags:
            - { name: kernel.event_listener, event: user.on.create, method: onCreateUser}
    app.authentication.login_success_handler:
        class:  app\Handler\LoginSuccessHandler
        arguments:  ['@router', '@security.authorization_checker', '@request_stack']
    app.header_footer_manager:
        class: App\Manager\HeaderFooterManager
        arguments: ['@doctrine.orm.entity_manager', 'App\Entity\HeaderFooter']
        public: true
    app.partner_manager:
        class: App\Manager\PartnerManager
        arguments: ['@doctrine.orm.entity_manager', 'App\Entity\Partner', '@app.validation_log_manager', '@event_dispatcher']
        public: true
    app.event.partner:
        class: App\EventListener\PartnerListener
        arguments: ['@doctrine.orm.entity_manager','@security.token_storage','@translator','@app.notification_service', '@fos_user.user_manager','@event_dispatcher']
        tags:
            - { name: kernel.event_listener, event: partner.client.on.create, method: onCreatePartnerClient}
            - { name: kernel.event_listener, event: partner.client.on.validate.account, method: onValidateNeobeAccountCreation}

    app.validation_log_manager:
        class: App\Manager\ValidationLogManager
        arguments: ['@doctrine.orm.entity_manager', 'App\Entity\ValidationLog']
        public: true
    app.notification_service:
        class: App\Services\NotificationService
        arguments: ['@doctrine.orm.entity_manager', '@templating', '@app.mailer', '@app.sms', '%front_url%', '%api_url%']
        public: true

    api.neobe.create_account:
        class: App\Services\NeobeApiService
        arguments: ['@service_container']
        public: true
    app.page_details_manager:
        class: App\Manager\PageDetailsManager
        arguments: ['@doctrine.orm.entity_manager', 'App\Entity\PartnerPageDetails']
        public: true
    #app.twig.app_twig_extention:
    #    class: App\Twig\AppExtension
    #    arguments: ['@service_container', '@request_stack']
    #    public: true
    app.sms:
            class: App\Services\Sms
            arguments: ["@service_container","@doctrine.orm.entity_manager"]
            public: true
